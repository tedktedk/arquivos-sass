@mixin opacidade($opacity){
	-khtml-opacity: $opacity;
	-moz-opacity: $opacity;
	-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=$opacity)";
	opacity: $opacity;
	$opacity-ie: $opacity * 100;
  	filter: alpha(opacity=$opacity-ie);
}

@mixin containerFloat{
	float: left;
	width: 100%;
}

@mixin fonte($tipo, $cor){
	font: $tipo;
	color: $cor;
}

@mixin transition($valor){
	-webkit-transition: #{$valor};
	-moz-transition: #{$valor};
	-ms-transition: #{$valor};
	-o-transition: #{$valor};
	transition: #{$valor};
}

@mixin rotate($valor){
	-webkit-transform: rotate($valor);
	-moz-transform: rotate($valor);
	-o-transform: rotate($valor);
	transform: rotate($valor);
}

@mixin borderRadius($valor){
	-webkit-border-radius: $valor;
	-moz-border-radius: $valor;
	border-radius: $valor;
}

@mixin gerarFonte($nome, $arquivo){
    @font-face {
        font-family: $nome;
        src: url("../fonts/#{$arquivo}.eot");
        src: url("../fonts/#{$arquivo}.eot?#iefix") format("embedded-opentype"),
             url("../fonts/#{$arquivo}.woff") format("woff"),
             url("../fonts/#{$arquivo}.woff2") format("woff2"),
             url("../fonts/#{$arquivo}.ttf") format("truetype"),
             url("../fonts/#{$arquivo}.svg#$nome") format("svg");
        font-weight: normal;
        font-style: normal;
    }
}

@mixin breakpoint($point){
	@if $point == tablet {
		@media screen and (max-width: 1225px){ 
			@content;
		}
	}
	@else if $point == phablet {
		@media screen and (max-width: 768px){
			@content;
		}
	}
	@else if $point == mobile {
		@media screen and (max-width: 400px){
			@content;
		}
	}
}
